export const enLocales = {
  downloadAsCsv: "Download as CSV",
  afterTax: "After Tax:",
  price: "Price:",
  autoFill: "Auto Fill",
  buyMissingPlayers: "Buy Missing Players",
  futBinSBCSolutions: "---FUTBIN SBC SOLUTIONS---",
  marketSBCSolutions: "---Market Alert SOLUTIONS---",
  noConceptPlayers: "No concept players found",
  futBinId: "FutBin Id",
  sbcBuyMessage: "Bot will try to buy the following players",
  futBinBuyPercent: "{dataSource} Buy Percent",
  futBinSalePercent: "{dataSource} Sale Percent",
  tryingToBuySbc: "Trying to buy the missing players",
  futBinPriceErr: "Error fetching {dataSource} Price for",
  buyCompleted: "Buying players completed",
  noCardFound: "No card found for",
  buySuccess: "Buy success for",
  buyFailed: "Buy failed for",
  reattempting: "reattempting",
  othersWon: "Others Won",
  searchFailed: "Search failed for",
  squadIdMissing: "Squad Id is missing",
  invalidSquadId: "Invalid Squad Id",
  savingSquadFailed: "Saving Squad Failed",
  packMissing: "Unable to find the pack",
  autoOpenPacks: "Auto Open Packs",
  openPack: "Open pack",
  automatically: "Automatically",
  enhancer: "Enhancer",
  csvFileHeader:
    "Player Name,Rating,Quality,Rarity,Position,Nation,League,Club,Price Range,{dataSource} Price,Bought For,Discard Value,Contract Left,IsUntradable,IsLoaned",
  moveToClub: "Move To Club",
  moveToTransferList: "Move To TransferList",
  quickSell: "Quick Sell",
  players: "Players",
  nonPlayers: "Non players",
  duplicates: "Duplicates",
  noOfPacks: "Number of packs",
  packOpeningErr: "Error occured when opening packs",
  packsRemaining: "pack(s) remaining",
  handlingPlayers: "Handling players",
  handlingManagers: "Handling managers",
  handlingContracts: "Handling contracts",
  handlingOtherItems: "Handling other items",
  handlingDuplicates: "Handling duplicate items",
  handlingCredits: "Handling free credits/ packs",
  transferListFull: "Transfer List is Full",
  listFixed: "List for fixed price",
  startPrice: "Start Price",
  binPrice: "BIN Price",
  cardsIgnoreInfo:
    "Card's will be ignored, if the price range doesn't fall in the provided price.",
  binNotGiven: "BIN price not given",
  binLesser: "BIN price is lesser than start price",
  noCardsToList: "No cards found to be listed",
  listingCards: "Listing cards for",
  listingCardsFutBin: "Listing cards for {dataSource} price",
  listingCardsCompleted: "Listing the cards completed",
  priceNotInRange: "Given price is not in card's price range",
  priceMissing: "Price missing for",
  listed: "Listed",
  showFutBinPrice: "Show {dataSource} Price",
  showFutBinPriceInfo:
    "Shows {dataSource} Price and marks Bargains in searches",
  markBidBargins: "Mark Bid Bargains",
  markBidBarginsInfo: "Highlights Bargains based on current bid",
  barginThresholdPercent: "Bargains Threshold Percent",
  barginThresholdPercentInfo:
    "Highlight items if price below or equal to this percent of {dataSource} price",
  futBinSalePercentInfo: "Sale Price percent for Relist {dataSource}",
  rating: "Rating",
  ratingInfo: "Will only show players with rating as this value in searches",
  futBinListDuration: "{dataSource} List Duration",
  futBinListDurationInfo:
    "List Duration when listing using Re-list {dataSource}",
  maxUnassignedItems: "Max number of unassigned items",
  maxUnassignedItemsInfo:
    "Increase the value, to BIN on items with more items on Unassigned Pile",
  hideBinPopUp: "Hide Bin Popup",
  hideBinPopUpInfo: "Automatically confirms the Bin popup",
  hideTransferFull: "Hide Transfer full Popup",
  hideTransferFullInfo: "Hides transfer full list popup",
  showSquadPrice: "Show Squad Price",
  showSquadPriceInfo: "Show {dataSource} Price on Squad/SBC",
  save: "Save",
  saveSuccess: "Saved settings successfully",
  packValue: "Pack Value",
  squadPrice: "Squad Price",
  bidTotal: "Bid Total",
  binTotal: "Bin Total",
  fixed: "Fixed",
  listFutBin: "List for {dataSource}",
  viewFutBin: "View on {dataSource}",
  futBinUrlErr: "Unable to get {dataSource} url",
  list: "List",
  calcMinBin: "Calculate Min BIN",
  calculatingMinBin: "Calculating Min BIN ....",
  calcMinBinErr: "Unable to calculate min bin",
  calcAverage: "Average Min BIN",
  calcMin: "Min BIN",
  topCalcMin: "Top 5 Min BIN",
  showCalcMinBin: "Show Calculate Min BIN",
  showCalcMinBinInfo:
    "Toggle it on to show Calculate Min BIN option on player panel",
  sendToTransferListInfo: "Bot will try to send items to Transfer list",
  activeSquadMemberErr: "Unable to get active squad players",
  disablePackAnimation: "Disable Pack Animation",
  disablePackAnimationInfo: "Disables animation during pack opening",
  errInsufficientCredits: "Insufficient credits to purchase pack",
  autoBuyLowest: "Automatically Buy Lowest Card",
  pageNumber: "Page Number",
  pageNumberInfo: "Page jumping is not recommended, use it at your own risk",
  autoSelectLowest: "Automatically Select Lowest Card",
  findSolvableSbcs: "Find Solvable Sbcs",
  scanClubSbc: "Scan your club players to find solvable sbcs",
  solvableUnAvailable: "Login to AB Server to view the scan result",
  solveInfo: "Bot will scan your club to find what sbcs can be completed",
  gatherChallengeInfo: "Gathering Challenges Info",
  gatherSquadInfo: "Gathering Club Players",
  fetchingSolvableSbcs: "Finding Solvable Sbcs",
  errSolvableSbcs: "Unable to Solvable Sbcs",
  increaseSearchResult: "Increase Search Result",
  increaseSearchResultInfo: "Increases Search Result Count From 21 To 51",
  showOnlyBargain: "Show only Bargains",
  showOnlyBargainInfo: "Show only cards lesser than FUTBIN in searches",
  selectAll: "Select All",
  deSelectAll: "Deselect All",
  showAlternatePostion: "Show Alternate Positions",
  showAlternatePostionInfo: "Will show Alternate Positions Info",
  levelError:
    "This feature is only available to 'Enhancer Gold' level users. Go to 'Store' Tab if you want to upgrade",
  generateSolution: "Generate Solution",
  generateSolutionInfo:
    "Based on the given SBC requirements bot will try to generate a unique solution not used before",
  getUnassignedPlayers: "Get Unassigned Players",
  tryingToGetUnassignedPlayers: "Trying to get unassigned players",
  unassignedCompleted: "Getting unassigned players completed"
};
